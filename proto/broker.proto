syntax = "proto3";

package proto;

service PubBroker {
	rpc Publish(Publication) returns (PubResponse) {}
}

service SubBroker {
	rpc Subscribe(stream SubRequest) returns (stream Publication) {}
}

service InterBroker {
	rpc Echo(Publication) returns (EchoResponse) {}
	rpc Ready(Publication) returns (ReadyResponse) {}
	rpc Chain(Publication) returns (ChainResponse) {}
}

message Publication {
	uint32 PubType = 1;
	uint64 PublisherID = 2;
	sint64 PublicationID = 3;
	uint64 TopicID = 4;
	uint64 BrokerID = 5;
	repeated bytes Contents = 6;
	bytes MAC = 7;
	repeated ChainMAC ChainMACs = 8;
}

message ChainMAC {
	string From = 1;
	string To = 2;
	bytes MAC = 3;
}

message PubResponse{
	enum Status {
		OK = 0;
		HISTORY = 1;
		BLOCKED = 2;
		WAIT = 3;
		BAD_MAC = 4;
	}
	Status status = 1;
	//bool Accepted = 1;
	//bool RequestHistory = 2;
	//bool Blocked = 3;
	//bool Wait = 4;
}

message EchoResponse{}

message ReadyResponse{}

message ChainResponse{}

message SubRequest {
	uint64 SubscriberID = 1;
	repeated uint64 TopicIDs = 2;
	bytes MAC = 3;
}
